twitter-to-kafka-service:
  twitter-keywords:
    - Java
    - Microservices
    - Kafka
    - Elasticsearch
  welcome-message: Hello from Twitter to Kafka Service

  enable-mock-tweets: true
  mock-min-tweet-length: 5
  mock-max-tweet-length: 15
  mock-sleep-ms: 10000

  retry-config:
    initial-interval-ms: 1000
    max-interval-ms: 10000
    multiplier: 2
    max-attempts: 3
    sleep-ms: 1000

  kafka-config:
    bootstrap-servers: localhost:19092, localhost:29092, localhost:39092,
    schema-registry-url: http://localhost:8081
    schemaRegistryUrlKey: schema-registry-url
    topic-name: twitter-tweets
    topic-names-to-create:
      - twitter-topic
    num-partitions: 3
    replication-factor: 5

  kafka-producer-config:
    key-serializer-class : org.apache.kafka.common.serialization.LongSerializer #keyin long olacağını belirtiyoruz
    value-serializer-class : io.confluent.kafka.serializers.KafkaAvroSerializer #value kafka avro serializer olduğunu belirtiyoruz
    compression-type: snoopy #diğerlerinden hızlıdır, az sıkıştırır.
    acks: all #all: wait for all in-sync replicas, 1: wait for the leader, 0: no acks
    batch-size: 16384  #16kb
    batch-size-boost-factor: 100 # 16kb * 100 = 1.6mb 100x
    linger-ms: 5 #delay on producer in case of light load
    request-timeout-ms: 60000 #60s #timeout for producer to wait for acks from broker
    retry-count: 5 # it will retry 5 times if it fails to send a message


  #enable-v2-tweets: false
  #twitter-v2-base-url: https://api.twitter.com/2/tweets/search/stream?tweet.fields=created_at&expansions=author_id
  #twitter-v2-rules-base-url: https://api.twitter.com/2/tweets/search/stream/rules
  #twitter-v2-bearer-token: ${TWITTER_V2_BEARER_TOKEN}